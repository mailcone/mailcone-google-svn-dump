[DEFAULT]
zope_conf = %(here)s/zope.deploy.conf


[server:main]
use = egg:Paste#http
host = ${:host}
port = ${:port}


[pipeline:main]
pipeline = accesslogging gzip fanstatic mailcone


[filter:accesslogging]
use = egg:Paste#translogger
setup_console_handler = False


[filter:gzip]
use = egg:Paste#gzip


[filter:fanstatic]
use = egg:fanstatic#fanstatic
bottom = true
versioning = true
minified = true
rollup = true
recompute_hashes = false


[app:mailcone]
use = egg:raptus.mailcone.app#main
exempt-exceptions = zope.security.interfaces.IUnauthorized
mail_database=mail_database
ldap=ldap


[mailtosql]
# required part for mail parser configuration.
mail_database=mail_database
attachments=mailtosql-attachments
logs=mailtosql-logs
backup=backup


[mail_database]
# look at sqlalchemy.engine.__init.__ and *.url for all options!
username=mailcone
password=
drivername=postgresql
host=localhost
port=5432
database=${postgres-init:dbapp}
echo=True


[mailtosql-attachments]
output=${mailtosql_dir_attachments:paths}


[mailtosql-logs]
output=${mailtosql_dir_logs:paths}


[backup]
# path where mails are stored as file. file is  1by1 the original input stream.
# leave empty if you don't want backup.
backup=${mailtosql_dir_backup:paths}


[ldap]
# use a additional file instead this config.
# this additional file will be parsed with standard
# python ConfigParser. Section name is [ldap] and
# the options are the same as here.
# for no additional file leave "config_file" empty


config_file=${buildout:directory}/raptus_ldap.cfg
# allow cache. For disabling use 0
cache_expire=1200
host=
port=
useSSL=
bindDN=
bindPassword=

# The LDAP search base where principals are found.
searchBase=
# The LDAP search scope used to find principals.
searchScope=
# The LDAP search base where groups are found.
groupsSearchBase=
# THe LDAP search scope used to find groups.
groupsSearchScope=
# The LDAP attribute used to find principals.
loginAttribute=
# The prefix to add to all principal ids.
principalIdPrefix=
# The LDAP attribute used to determine a principal's id.
idAttribute=
# The LDAP attribute used to determine a principal's title.
titleAttribute=
# The LDAP attribute (on a group entry) used to determine the group's id.
groupIdAttribute=



# Logging configuration
[loggers]
keys = root


[logger_root]
level = ERROR
handlers = console


[handlers]
keys = file


[handler_file]
class = FileHandler
args = (os.path.join(r'$${buildout:directory}', 'var', 'log', 'mailcone.log'), 'a')
level = NOTSET
formatter = generic


[formatters]
keys = generic


[formatter_generic]
format = %(asctime)s %(levelname)s [%(name)s] %(message)s
